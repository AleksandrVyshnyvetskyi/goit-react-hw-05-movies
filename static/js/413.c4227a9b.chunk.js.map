{"version":3,"file":"static/js/413.c4227a9b.chunk.js","mappings":"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","sources":["components/Logo/Logo.js","components/fetch.js","components/header/header.js","components/hooks/usePrevious.jsx","components/Search/search.js","components/pages/movies.js","components/trending/trending.js"],"sourcesContent":["export const Logo = () => {\n  return (\n    <a href=\"https://www.themoviedb.org/\" target=\"_blanck\" className=\"logo\">\n      <img\n        src=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_2-d537fb228cf3ded904ef09b136fe3fec72548ebc1fea3fbbd1ad9e36364db38b.svg\"\n        alt=\"logo-api\"\n      />\n    </a>\n  );\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY_API = 'fad6989dda3803c9fb66ec36be17ab2f';\n\nconst fetchRequest = async page => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${KEY_API}&language=uk&page=${page}`\n  );\n  return response.data;\n};\n\nconst fetchOneMovie = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${KEY_API}&language=uk`\n  );\n  return response.data;\n};\n\nconst fetchMovieByName = async (searchName, currentPage) => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY_API}&language=uk&page=1&include_adult=false&query=${searchName}&page=${currentPage}`\n  );\n  return response.data;\n};\n\nconst fetchActorsMovie = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY_API}&language=uk`\n  );\n  return response.data;\n};\n\nconst fetchReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY_API}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nexport {\n  fetchRequest,\n  fetchOneMovie,\n  fetchMovieByName,\n  fetchActorsMovie,\n  fetchReviews,\n};\n","import { NavLink } from 'react-router-dom';\n\nconst navItem = [\n  { href: '/', text: 'Головна' },\n  { href: 'movies', text: 'Фільми' },\n];\n\nexport const Header = () => {\n  return navItem.map(({ href, text }) => (\n    <NavLink className=\"header-nav__item\" to={href} key={href}>\n      {text}\n    </NavLink>\n  ));\n};\n","import { useEffect, useRef } from 'react';\n\n\nexport function usePrevious(value) {\n        const ref = useRef();\n        useEffect(() => {\n            ref.current = value;\n        });\n        return ref.current;\n    };","import { useState } from 'react';\n\nexport function Search({ onSubmit }) {\n  const [searchName, setSearchName] = useState('');\n\n  const hendleChangeInputSearch = e => {\n    const { value } = e.target;\n    setSearchName(value);\n  };\n  const hendleSubmitSearchForm = e => {\n    e.preventDefault();\n    if (searchName.trim() === '') {\n      alert('Будьласка, введіть назву фільму!');\n    }\n    onSubmit(searchName);\n    setSearchName('');\n  };\n\n  return (\n    <form onSubmit={hendleSubmitSearchForm}>\n      <input\n        onChange={hendleChangeInputSearch}\n        name=\"searchName\"\n        value={searchName}\n        type=\"text\"\n        autoFocus\n        placeholder=\"Назва фільму\"\n      />\n      <button className=\"input-btn\" type=\"submit\">\n        Пошук\n      </button>\n    </form>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { usePrevious } from 'components/hooks/usePrevious';\nimport { fetchMovieByName } from 'components/fetch';\nimport { Search } from 'components/Search/search';\nimport { TrendingList } from 'components/trending/trending';\nimport { Header } from 'components/header/header';\nimport { Logo } from 'components/Logo/Logo';\n\nexport default function MovieGallery() {\n  const [movies, setMovies] = useState(\n    JSON.parse(localStorage.getItem('listmovies')) ?? []\n  );\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [page, setPage] = useState(1);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('searchQuery');\n\n  const prevPage = usePrevious(page);\n  const prevSearchName = usePrevious(searchQuery);\n\n  useEffect(() => {\n    window.localStorage.setItem('listmovies', JSON.stringify(movies));\n  }, [movies]);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      setLoading(true);\n      try {\n        const result = await fetchMovieByName(searchQuery, page);\n        const items = result.results;\n        if (items.length === 0) {\n          return alert('Нічого не знайдено, спробуй ще раз...');\n        }\n        if (page === 1) {\n          setMovies([...items]);\n        } else {\n          setMovies(prev => [...prev, ...items]);\n        }\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (!searchQuery) {\n      return;\n    }\n    if (page > prevPage) {\n      fetchMovie(searchQuery, page);\n      return;\n    }\n    if (prevSearchName !== searchQuery && page === prevPage) {\n      fetchMovie(searchQuery, 1);\n      resetPage();\n      return;\n    }\n  }, [searchQuery, page, prevPage, prevSearchName]);\n\n  const resetPage = () => {\n    setPage(1);\n  };\n\n  const handleSubmitSearchForm = searchName => {\n    setSearchParams({ searchQuery: searchName });\n  };\n\n  const loadMore = () => {\n    setPage(prev => prev + 1);\n  };\n\n  const isMovies = Boolean(movies.length);\n  return (\n    <div>\n      <div className=\"background\">\n        <div className=\"container\">\n          <div className=\"header-nav\">\n            <Header />\n            <Logo />\n          </div>\n          <h3 className=\"movies-title\">Будьласка, введіть назву фільму:</h3>\n          <Search onSubmit={handleSubmitSearchForm} />\n          {loading ? <Loader /> : <p></p>}\n          {error && <h4>Упссс...Щось зламалося... Спробуй ще...</h4>}\n          {movies && <TrendingList movies={movies} />}\n          {isMovies && (\n            <div className=\"centre\">\n              <button type=\"button\" onClick={loadMore} className=\"btn\">\n                Показати більше\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { NavLink } from 'react-router-dom';\n\nexport function TrendingList({ movies }) {\n  const trendingItem = movies.map(({ id, title, name, backdrop_path }) => {\n    const imageURL = 'https://image.tmdb.org/t/p/w300';\n    return (\n      <li key={id} className=\"trending-list__item\">\n        <NavLink className=\"trending-list__item--link\" to={`/movies/${id}`}>\n          <img src={`${imageURL}${backdrop_path}`} alt={title}></img>\n          <p className=\"movie-name\">{title ? title : name}</p>\n        </NavLink>\n      </li>\n    );\n  });\n  return <ul className=\"tranding-list\">{trendingItem}</ul>;\n}\n"],"names":["Logo","href","target","className","src","alt","BASE_URL","KEY_API","fetchRequest","page","axios","response","data","fetchOneMovie","id","fetchMovieByName","searchName","currentPage","fetchActorsMovie","fetchReviews","navItem","text","Header","map","to","usePrevious","value","ref","useRef","useEffect","current","Search","onSubmit","useState","setSearchName","e","preventDefault","trim","alert","onChange","name","type","autoFocus","placeholder","MovieGallery","JSON","parse","localStorage","getItem","movies","setMovies","loading","setLoading","error","setError","setPage","useSearchParams","searchParams","setSearchParams","searchQuery","get","prevPage","prevSearchName","window","setItem","stringify","fetchMovie","result","items","results","length","prev","resetPage","isMovies","Boolean","Loader","onClick","TrendingList","trendingItem","title","backdrop_path"],"sourceRoot":""}