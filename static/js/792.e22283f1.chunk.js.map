{"version":3,"file":"static/js/792.e22283f1.chunk.js","mappings":"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","sources":["components/Logo/Logo.js","components/fetch.js","components/header/header.js","components/pages/home.js","components/trending/trending.js"],"sourcesContent":["export const Logo = () => {\n  return (\n    <a href=\"https://www.themoviedb.org/\" target=\"_blanck\" className=\"logo\">\n      <img\n        src=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_2-d537fb228cf3ded904ef09b136fe3fec72548ebc1fea3fbbd1ad9e36364db38b.svg\"\n        alt=\"logo-api\"\n      />\n    </a>\n  );\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY_API = 'fad6989dda3803c9fb66ec36be17ab2f';\n\nconst fetchRequest = async page => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${KEY_API}&language=uk&page=${page}`\n  );\n  return response.data;\n};\n\nconst fetchOneMovie = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${KEY_API}&language=uk`\n  );\n  return response.data;\n};\n\nconst fetchMovieByName = async (searchName, currentPage) => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY_API}&language=uk&page=1&include_adult=false&query=${searchName}&page=${currentPage}`\n  );\n  return response.data;\n};\n\nconst fetchActorsMovie = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY_API}&language=uk`\n  );\n  return response.data;\n};\n\nconst fetchReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY_API}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nexport {\n  fetchRequest,\n  fetchOneMovie,\n  fetchMovieByName,\n  fetchActorsMovie,\n  fetchReviews,\n};\n","import { NavLink } from 'react-router-dom';\n\nconst navItem = [\n  { href: '/', text: 'Головна' },\n  { href: 'movies', text: 'Фільми' },\n];\n\nexport const Header = () => {\n  return navItem.map(({ href, text }) => (\n    <NavLink className=\"header-nav__item\" to={href} key={href}>\n      {text}\n    </NavLink>\n  ));\n};\n","import { useState, useEffect } from 'react';\nimport { fetchRequest } from 'components/fetch';\nimport { Loader } from 'components/Loader/Loader';\nimport { TrendingList } from 'components/trending/trending';\nimport { Header } from 'components/header/header';\nimport { Logo } from 'components/Logo/Logo';\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    const fetchImages = async () => {\n      setLoading(true);\n      try {\n        const result = await fetchRequest(page);\n        const items = result.results;\n\n        setMovies(prevMovies => {\n          if (page === 1) {\n            return [...items];\n          } else {\n            const prevMovieId = prevMovies.map(({ id }) => id);\n            const newMovieIds = items.map(({ id }) => id);\n            const newArrId = newMovieIds.reduce((newArr, movieId) => {\n              if (prevMovieId.includes(movieId)) {\n                return newArr;\n              }\n              newArr.push(movieId);\n              return newArr;\n            }, []);\n\n            const filteredNewMovies = items.reduce((newArrItems, item) => {\n              if (newArrId.includes(item.id)) {\n                newArrItems.push(item);\n                return newArrItems;\n              }\n              return newArrItems;\n            }, []);\n            return [...prevMovies, ...filteredNewMovies];\n          }\n        });\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchImages(page);\n  }, [page]);\n\n  const loadMore = () => {\n    setPage(prevState => prevState + 1);\n  };\n\n  return (\n    <div className=\"background\">\n      <div className=\"container\">\n        <div className=\"header-nav\">\n          <Header />\n          <Logo />\n        </div>\n        <div className=\"title-box\">\n          <h2>Сьогодні в тренді:</h2>\n        </div>\n        {loading ? <Loader /> : <TrendingList movies={movies} />}\n        {error && <h4>Упссс...Щось зламалося... Спробуй ще...</h4>}\n        {TrendingList && (\n          <div className=\"btn-box\">\n            {' '}\n            <button type=\"button\" onClick={loadMore} className=\"btn\">\n              Показати більше\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import { NavLink } from 'react-router-dom';\n\nexport function TrendingList({ movies }) {\n  const trendingItem = movies.map(({ id, title, name, backdrop_path }) => {\n    const imageURL = 'https://image.tmdb.org/t/p/w300';\n    return (\n      <li key={id} className=\"trending-list__item\">\n        <NavLink className=\"trending-list__item--link\" to={`/movies/${id}`}>\n          <img src={`${imageURL}${backdrop_path}`} alt={title}></img>\n          <p className=\"movie-name\">{title ? title : name}</p>\n        </NavLink>\n      </li>\n    );\n  });\n  return <ul className=\"tranding-list\">{trendingItem}</ul>;\n}\n"],"names":["Logo","href","target","className","src","alt","BASE_URL","KEY_API","fetchRequest","page","axios","response","data","fetchOneMovie","id","fetchMovieByName","searchName","currentPage","fetchActorsMovie","fetchReviews","navItem","text","Header","map","to","Home","useState","movies","setMovies","loading","setLoading","error","setError","setPage","useEffect","fetchImages","result","items","results","prevMovies","prevMovieId","newArrId","reduce","newArr","movieId","includes","push","filteredNewMovies","newArrItems","item","TrendingList","type","onClick","prevState","trendingItem","title","name","backdrop_path"],"sourceRoot":""}