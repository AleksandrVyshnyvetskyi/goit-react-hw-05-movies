{"version":3,"file":"static/js/448.f4a44b8d.chunk.js","mappings":"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","sources":["components/fetch.js","components/pages/single.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY_API = 'fad6989dda3803c9fb66ec36be17ab2f';\n\nconst fetchRequest = async page => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${KEY_API}&language=uk&page=${page}`\n  );\n  return response.data;\n};\n\nconst fetchOneMovie = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${KEY_API}&language=uk`\n  );\n  return response.data;\n};\n\nconst fetchMovieByName = async (searchName, currentPage) => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY_API}&language=uk&page=1&include_adult=false&query=${searchName}&page=${currentPage}`\n  );\n  return response.data;\n};\n\nconst fetchActorsMovie = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY_API}&language=uk`\n  );\n  return response.data;\n};\n\nconst fetchReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY_API}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nexport {\n  fetchRequest,\n  fetchOneMovie,\n  fetchMovieByName,\n  fetchActorsMovie,\n  fetchReviews,\n};\n","import { useState } from 'react';\nimport {\n  useParams,\n  useNavigate,\n  useLocation,\n  NavLink,\n  Outlet,\n} from 'react-router-dom';\nimport { fetchOneMovie } from 'components/fetch';\nimport { useEffect } from 'react';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function SingleMoviePage() {\n  const [state, setState] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [genresList, setGenresList] = useState([]);\n\n  const { id } = useParams();\n  const location = useLocation();\n\n  const isCastPage = location.pathname.includes('cast');\n  const castLink = isCastPage ? `/movies/${id}` : `/movies/${id}/cast`;\n  const isReviews = location.pathname.includes('reviews');\n  const reviewsLink = isReviews ? `/movies/${id}` : `/movies/${id}/reviews`;\n\n  const navigate = useNavigate('/');\n  const imageURL = 'https://image.tmdb.org/t/p/w500';\n\n  useEffect(() => {\n    const fetchInfMovie = async () => {\n      setLoading(true);\n      try {\n        const movieDetails = await fetchOneMovie(id);\n        const genres = movieDetails.genres.map(({ name, id }) => (\n          <p key={id}>{name}</p>\n        ));\n        setState(movieDetails);\n        setGenresList(genres);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchInfMovie();\n  }, [id]);\n\n  const goBackHomePage = () => navigate('/');\n  const goBackMoviesPage = () => navigate('/movies');\n\n  return (\n    <div className=\"background\">\n      <div className=\"container\">\n        <div className=\"btn-box\">\n          <button\n            className=\"btn btn-mar-right\"\n            type=\"button\"\n            onClick={goBackHomePage}\n          >\n            Повернутися на головну\n          </button>\n          <button className=\"btn\" type=\"button\" onClick={goBackMoviesPage}>\n            Повернутися до фільмів\n          </button>\n        </div>\n\n        {loading && <Loader />}\n        {error && <h4>Упссс...Щось зламалося... Спробуй ще...</h4>}\n        {state && (\n          <div>\n            <div className=\"centre\">\n              <div className=\"one_movie_box\">\n                <img\n                  className=\"poster_one_movie\"\n                  src={`${imageURL}${state.poster_path}`}\n                  alt={state.tagline}\n                  width=\"300\"\n                />\n                <ul className=\"one_movie_info\">\n                  <li className=\"one_movie_info--item\">\n                    <h2>\n                      \"{state.title ? state.title : state.name}\"<span> | </span>\n                      {state.release_date.substr(0, 4)}\n                    </h2>\n                  </li>\n                  <li className=\"one_movie_info--item\">\n                    <b>Рейтинг:</b>\n                    <i>{Math.round(state.vote_average * 10)} %</i>\n                  </li>\n                  <li className=\"one_movie_info--item\">\n                    <b>Опис:</b>\n                    <i>{state.overview}</i>\n                  </li>\n                  <li className=\"one_movie_info--item\">\n                    <b>Жанр:</b>\n                    <i className=\"genres\">{genresList}</i>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"more_info\">\n              <h3 className=\"more_info_titile\">Інша інформація:</h3>\n              <NavLink to={castLink}>Актори</NavLink>\n              <NavLink to={reviewsLink}>Відгуки</NavLink>\n            </div>\n            <Outlet />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":["BASE_URL","KEY_API","fetchRequest","page","axios","response","data","fetchOneMovie","id","fetchMovieByName","searchName","currentPage","fetchActorsMovie","fetchReviews","SingleMoviePage","useState","state","setState","loading","setLoading","error","setError","genresList","setGenresList","useParams","location","useLocation","castLink","pathname","includes","reviewsLink","navigate","useNavigate","useEffect","fetchInfMovie","movieDetails","genres","map","name","className","type","onClick","src","poster_path","alt","tagline","width","title","release_date","substr","Math","round","vote_average","overview","to"],"sourceRoot":""}